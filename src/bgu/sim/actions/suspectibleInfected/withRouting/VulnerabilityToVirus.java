/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bgu.sim.actions.suspectibleInfected.withRouting;

import bgu.sim.core.stat.StatisticCollector;
import bgu.sim.data.Message;
import bgu.sim.data.NetDevice;
import bgu.sim.ruleEngine.action.AbsDeviceAction;
import bgu.sim.ruleEngine.action.IndicativeFeature;

/**
 *
 * @author Sergey
 */
public class VulnerabilityToVirus extends AbsDeviceAction {

    public VulnerabilityToVirus() {
        super("Reads messages with \"Virus\" key and adds them to machine", new IndicativeFeature[]{IndicativeFeature.FILE_WRITE, IndicativeFeature.NET_TRAFIC_IN});
    }

    @Override
    public Integer execute(NetDevice input) {
        int count = 0;
        Message m;
        while (input.getMessageQueue().HasReceivedMessages()) {
            m = input.getMessageQueue().PollReceivedMessage();
            if ("Virus".equals(m.getData().getKey())) {
                if (input.getInfo().get("Virus") == null) {
                    input.getInfo().set(m.getData().getKey(), m.getData().getValue());
                    count = 1;
                    break;
                }
            } else {
                input.getMessageQueue().Push(m);
            }
        }
        StatisticCollector.getInstance().increaseValue(this.getName(), count);
        return count;
    }

}
